c
here.count
here = EtsyProduct.where(listing_id: etsy_listing_ids)
etsy_listing_ids.count
sold_listing_ids.count
c
sold_listing_ids.all.count
sold_listing_ids.all
sold_listing_ids
sold_listing_ids.count
c
etsy_listings - database_listings
database_listings.count
etsy_listings.count
offset
c
etsy_listings - database_listings
etsy_listings.count
database_listings.count
database_listing.count
offset
c
sold_listings
sold_listings.count
c
etsy_listing_ids.first
etsy_listing_ids.count
sold_listings
sold_listings.count
c
listings.first
listings.pluck("listing_id")
c
params
c
params
c
listings.first.result["when_made"]
listings.first
c
params
term
c
listing.result["listing_id"]
listing[:listing_id]
listing.result
listing
listing.count
c
listing.count
listing.first.result
listing.first
listing[:result]
listing.inspect
listing.result
listing.result["listing_id"]
listing["listing_id"]
listing
c
os
c
os
continue
os
c
(inventory_count.to_f / 100).ceil
(inventory_count.to_f / 100)
(inventory_count / 100)
(inventory_count / 100).to_f
(inventory_count / 100).to_f.ceil
(inventory_count / 100).round
(inventory_count / 100).floor
(inventory_count / 100).ceil
inventory_count
inventory_cont
c
listings = Etsy::Listing.find_all_by_shop_id(user.shop.id, access.merge(:fields => ['listing_id', 'last_modified_tsz'], :limit => 100))
auth = { :access_token => token, :access_secret => secret }
shop = user.shop
user = Etsy.myself(token, secret)
Etsy.myself(token, secret)
secret
token
